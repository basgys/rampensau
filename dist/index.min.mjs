function C({total:e=9,hStart:t=Math.random()*360,hStartCenter:r=.5,hEasing:m=o=>o,hCycles:u=1,sRange:n=[.4,.35],sEasing:a=o=>Math.pow(o,2),lRange:l=[Math.random()*.1,.9],lEasing:c=o=>Math.pow(o,1.5),hueList:p}={}){let o=l[1]-l[0],i=n[1]-n[0],d=p&&p.length>0?p.length:e;return Array.from({length:d},(y,x)=>{let h=x/(d-1),g=1/d;return[p?p[x]:(360+t+(1-m(h,g)-r)*(360*u))%360,n[0]+i*a(h,g),l[0]+o*c(h,g)]})}function b(e,t=Math.random){let r=e.length,m;for(;r!=0;)m=Math.floor(t()*r),r--,[e[r],e[m]]=[e[m],e[r]];return e}var M={complementary:e=>[e,(e+180)%360],splitComplementary:e=>[e,(e+150)%360,(e+210)%360],triadic:e=>[e,(e+120)%360,(e+240)%360],tetradic:e=>[e,(e+90)%360,(e+180)%360,(e+270)%360],analogous:e=>[e,(e+30)%360,(e+60)%360,(e+90)%360,(e+120)%360,(e+150)%360]};function A({startHue:e=0,total:t=9,minHueDiffAngle:r=60,rndFn:m=Math.random}={}){r=Math.min(r,360/t);let u=e||m()*360,n=Array.from({length:Math.round(360/r)},(l,c)=>(u+c*r)%360),a=b(n,m);return a.length>t&&(a=a.slice(0,t)),a}function s(e,t){let r=Math.pow(10,t||0);return Math.round(e*r)/r}var f={oklch:(e,t)=>[s(e[2],t),s(e[1]*.4,t),s(e[0],t)],lch:(e,t)=>[s(e[2]*100,t),s(e[1]*150,t),s(e[0],t)],hsl:(e,t)=>[s(e[0],t),s(e[1]*100,t)+"%",s(e[2]*100,t)+"%"]},F=(e,t="oklch",r=4)=>`${t}(${f[t](e,r).join(" ")})`,T=(e,t,r)=>t+e*(r-t),H=(e,t,r=T)=>{if(e.length===0)throw new Error("Initial array must not be empty.");if(t<e.length)throw new Error("Target size must be greater than or equal to the initial array length.");let m=t-e.length,u=e.map(n=>[n]);for(let n=0;n<m;n++)u[n%(e.length-1)].push(null);for(let n=0;n<u.length-1;n++){let a=u[n],l=u[n+1],c=a[0],p=l[0];for(let o=1;o<a.length;o++){let i=o/a.length;a[o]=r(i,c,p)}}return u.flat()},S={total:{default:5,props:{min:4,max:50,step:1}},hStart:{default:0,props:{min:0,max:360,step:.1}},hCycles:{default:1,props:{min:-1.25,max:1.5,step:.001}},hStartCenter:{default:.5,props:{min:0,max:1,step:.001}},minLight:{default:Math.random()*.2,props:{min:0,max:1,step:.001}},maxLight:{default:.89+Math.random()*.11,props:{min:0,max:1,step:.001}},minSaturation:{default:Math.random()<.5?.4:.8+Math.random()*.2,props:{min:0,max:1,step:.001}},maxSaturation:{default:Math.random()<.5?.35:.9+Math.random()*.1,props:{min:0,max:1,step:.001}}};export{M as colorHarmonies,F as colorToCSS,C as generateColorRamp,S as generateColorRampParams,T as lerp,H as scaleSpreadArray,b as shuffleArray,A as uniqueRandomHues};
